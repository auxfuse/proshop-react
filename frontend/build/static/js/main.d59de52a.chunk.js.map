{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/formContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","userItems","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductsDetails","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","ListGroupItem","countInStock","disabled","length","review","createdAt","substring","productId","post","FormGroup","controlId","Label","rows","addToCart","setItem","stringify","CartScreen","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","disbaled","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","Group","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","payDeliver","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setDescription","setCountInStock","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d59de52a.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer, productTopRatedReducer\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from \"./reducers/userReducers\";\r\nimport {orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(\r\n    localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(\r\n    localStorage.getItem('userInfo')) : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(\r\n    localStorage.getItem('shippingAddress')) : {};\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userItems: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import {\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';","import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n        return{\r\n            ...state,\r\n            shippingAddress: action.payload,\r\n        }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n        return{\r\n            ...state,\r\n            paymentMethod: action.payload,\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {  }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import {\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state={\r\n    loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                order: [],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Products...'\r\n                className='mr-sm-2 ml-sm5'\r\n            ></Form.Control>\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default SearchBox;","import {\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('useInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    document.location.href = '/login'\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n        const { data } = await axios.get(`/api/users`, config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS\r\n        });\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n};","import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    };\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Route render={({ history }) => <SearchBox history={history}/>}/>\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className=\"fas fa-shopping-cart\" />Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link href='/login'><i className=\"fas fa-user\" />Sign In</Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        For educational purposes only\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i\r\n                    style={{color}}\r\n                    className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                />\r\n                <i\r\n                    style={{color}}\r\n                    className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                />\r\n                <i\r\n                    style={{color}}\r\n                    className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                />\r\n                <i\r\n                    style={{color}}\r\n                    className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                />\r\n                <i\r\n                    style={{color}}\r\n                    className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}\r\n                />\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#3f93dd'\r\n};\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                   <Card.Title as='div'>\r\n                       <strong>{product.name}</strong>\r\n                   </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;","import {\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        });\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const listProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        });\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST\r\n        });\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n};","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({variant, children} ) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ? keyword ? `/search/${keyword}/page${x+1}` : `/page/${x+1}` : `/admin/productlist/${x+1}`}\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n};\r\n\r\nexport default Paginate;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    )\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to Proshop',\r\n    description: 'We sell electronics',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n}\r\n\r\nexport default Meta;","import React, {useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from \"../actions/productActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h4>{product.name} (${product.price})</h4>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n};\r\n\r\nexport default ProductCarousel;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport Meta from \"../components/Meta\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (<ProductCarousel />) : (\r\n                <Link to='/' className='btn btn-light'> Go Back</Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>\r\n                    {error}\r\n                </Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                    {products.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                        </Col>\r\n                    ))}\r\n                    </Row>\r\n                    <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Image, ListGroup, ListGroupItem, Card, Button, Form, FormGroup } from \"react-bootstrap\";\r\nimport Rating from '../components/Rating';\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Meta from \"../components/Meta\";\r\nimport { listProductsDetails, createProductReview } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nconst ProductScreen = ({history, match}) => {\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n    const { success:successProductReview, error: errorProductReview } = productReviewCreate;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review submitted!')\r\n            setRating(0);\r\n            setComment('');\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_RESET\r\n            })\r\n        }\r\n        dispatch(listProductsDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroupItem>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    Price: ${product.price}\r\n                                </ListGroupItem>\r\n                                <ListGroupItem>\r\n                                    Desc: {product.description}\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Price:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <strong>${product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Status:\r\n                                            </Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroupItem>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                                    setQty(e.target.value)}>\r\n                                                        {[...Array(product.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroupItem>\r\n                                    )}\r\n\r\n                                    <ListGroupItem>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className=\"btn-block\"\r\n                                            type='button'\r\n                                            disabled={product.countInStock === 0}\r\n                                        >\r\n                                            Add to Cart\r\n                                        </Button>\r\n                                    </ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map(review => (\r\n                                    <ListGroup.Item key={review.id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write Customer Review:</h2>\r\n                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <FormGroup controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) => setRating(e.target.value)}>\r\n                                                    <option value=\"\">Select...</option>\r\n                                                    <option value=\"1\">1 - Poor</option>\r\n                                                    <option value=\"2\">2 - Fair</option>\r\n                                                    <option value=\"3\">3 - Good</option>\r\n                                                    <option value=\"4\">4 - Very Good</option>\r\n                                                    <option value=\"5\">5 - Excellant</option>\r\n                                                </Form.Control>\r\n                                            </FormGroup>\r\n                                            <FormGroup controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    rows='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) => setComment(e.target.value)}\r\n                                                >\r\n                                                </Form.Control>\r\n                                            </FormGroup>\r\n                                            <Button type='submit' variant='primary'>Submit</Button>\r\n                                        </Form>\r\n                                        ) :\r\n                                        <Message>\r\n                                            Please <Link to='/login'>sign in</Link> to write review. {' '}\r\n                                        </Message>\r\n                                    }\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;","import axios from 'axios';\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n     const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock : data.countInStock,\r\n            qty\r\n        }\r\n    });\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, ListGroupItem, Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n    console.log(cartItems);\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ?\r\n                    <Message>Your cart is empty\r\n                        <Link to='/'>Go back</Link>\r\n                    </Message> : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroupItem key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>${item.price}</Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e) =>\r\n                                            dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button type='button' variant='light' onClick={() =>\r\n                                            removeFromCartHandler(item.product)}>\r\n                                                <i className='fas fa-trash'/>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={8}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal: ({ cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disbaled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Proceed to checkout!\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default CartScreen;","import React from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default FormContainer;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n};\r\n\r\nexport default LoginScreen;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match!')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            { message && <Message variant='danger'>{message}</Message>}\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address:</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n};\r\n\r\nexport default RegisterScreen;","import React, { useState, useEffect } from 'react';\r\nimport {Form, Button, Row, Col, Table} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions';\r\nimport {listMyOrders} from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match!')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name:</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address:</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password:</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (<Loader/>) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}/>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{color: 'red'}}/>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default ProfileScreen;","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants';\r\nimport axios from \"axios\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const payDeliver = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo}, } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2 , step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n};\r\n\r\nexport default CheckoutSteps;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address:</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City:</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code:</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country:</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n};\r\n\r\nexport default ShippingScreen;","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Paypal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='value'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n};\r\n\r\nexport default PaymentScreen;","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    // Calculate Prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100)/100).toFixed(2)\r\n    };\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.qty, 0\r\n    ));\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 50);\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice));\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {' '}{cart.shippingAddress.city}{' '}{cart.shippingAddress.postalCode},\r\n                                {' '}{cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method:</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items:</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty!</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {getOrderDetails, payOrder, payDeliver } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading:loadingDeliver, success:successDeliver } = orderDeliver;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data:clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.async = true;\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            };\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET});\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, order, successPay, successDeliver, orderId]);\r\n\r\n    if(!loading){\r\n      // Calculate Prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100)/100).toFixed(2)\r\n        };\r\n\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => acc + item.price * item.qty, 0\r\n        ));\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(payDeliver(order))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address},\r\n                                {' '}{order.shippingAddress.city}{' '}{order.shippingAddress.postalCode},\r\n                                {' '}{order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (<Message variant='success'>Delivered on {order.deliveredAt}</Message>) : (\r\n                            <Message variant='danger'>Not delivered.</Message>)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method:</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (<Message variant='success'>Paid on {order.paidAt}</Message>) : (\r\n                            <Message variant='danger'>Not paid.</Message>)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items:</h2>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty!</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader/> : (\r\n                                        <PayPalButton\r\n                                        amount={order.totalPrice}\r\n                                        onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark as Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { success:successDelete } = userDelete;\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user._id}>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                            <td>\r\n                                {user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{ color: 'green' }} />\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }} />\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit' />\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                    <i className='fas fa-trash' />\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default UserListScreen;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({\r\n                type: USER_UPDATE_RESET,\r\n            })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, userId, user, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId, name, email, isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userList' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address:</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isAdmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin:'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default UserEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product: createdProduct } = productCreate;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login');\r\n        }\r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber]);\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus' /> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit' />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash' />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ProductListScreen;","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { listProductsDetails, updateProduct } from '../actions/productActions';\r\nimport {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [countInStock, setCountInStock] = useState();\r\n    const [uploading, setUploading ] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success:successUpdate } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET});\r\n            history.push('/admin/productlist');\r\n        } else {\r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.email)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, product, productId, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            };\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productList' className='btn btn-light my-3'>Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n                (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image:</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            />\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            />\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand:</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count in Stock:</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter Count in Stock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category:</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description:</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>Update</Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default ProductEditScreen;","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total Price</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {orders.map(order => (\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.user && order.user.name}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                                {order.isPaid ? (\r\n                                    order.paidAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }} />\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {order.isDelivered ? (\r\n                                    order.deliveredAt.substring(0, 10)\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }} />\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        Details\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default OrderListScreen;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n        <Header />\n        <main className='py-3'>\n            <Container>\n                <Route path='/register' component={RegisterScreen} />\n                <Route path='/login' component={LoginScreen} />\n                <Route path='/profile' component={ProfileScreen} />\n                <Route path='/admin/userlist' component={UserListScreen}/>\n                <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n                <Route path='/admin/productlist' component={ProductListScreen} exact />\n                <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n                <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n                <Route path='/admin/orderlist' component={OrderListScreen} />\n                <Route path='/product/:id' component={ProductScreen} />\n                <Route path='/shipping' component={ShippingScreen} />\n                <Route path='/payment' component={PaymentScreen} />\n                <Route path='/placeorder' component={PlaceOrderScreen} />\n                <Route path='/order/:id' component={OrderScreen} />\n                <Route path='/cart/:id?' component={CartScreen}/>\n                <Route path='/search/:keyword' component={HomeScreen} exact />\n                <Route path='/page/:pageNumber' component={HomeScreen} exact />\n                <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n                <Route path='/' component={HomeScreen} exact />\n            </Container>\n        </main>\n        <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}